<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        mDZd2XcP1KSSa5Ljwcph/XcV1JJMo//Z
</value>
  </data>
</root>